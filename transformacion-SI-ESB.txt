<!--
Transformacion de ESB a SI
Linneker Carvajal
Modificado por: rpena - 2018-02-09 / Generacion de Token de seguridad
Proyecto Modernizacion Banca en Linea
Octubre 2017
 -->

<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
	xmlns:dp="http://www.datapower.com/extensions"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:out="urn:esbbancogeneral.com/gbo/xml/schemas/v1_0/"
	xmlns:dcomcom="http://xmlns.bgeneral.com/ObjetoEmpresarial/DominioComun/Comun/V1" 
	xmlns:dautaut="http://xmlns.bgeneral.com/ObjetoIntegracion/DominioAutenticacion/Autenticacion/V1"
	xmlns:mautaut="http://xmlns.bgeneral.com/MensajeIntegracion/DominioAutenticacion/AutenticacionMI/V1"
	xmlns:date="http://exslt.org/dates-and-times"
	extension-element-prefixes="dp" exclude-result-prefixes="xs dp">

	<xsl:output method="xml" encoding="UTF-8" indent="yes" />

    <xsl:template match="/">
        <xsl:variable name="processorName" select="dp:variable('var://service/processor-name')" />
        <xsl:variable name="archivoMensajeria" select="document('local:///config/Mensajeria.xml')"/>
        <xsl:variable name="namespaceInterno" select="$archivoMensajeria/MensajesBase/uriMensajeria[@nombre-ws-proxy=$processorName]/@uri-mensaje"/>

		<!--Buscar operacion destino -->
		<xsl:variable name="operacionOrigen"  select="local-name(/*[1])"/>
		<xsl:variable name="archivoOperaciones" select="document('local:///config/NombreOperacion.xml')"/>
		<xsl:variable name="nombreOperacionOrigen"  select="substring-before($operacionOrigen, 'MsjResp')"/>
		<xsl:variable name="operacionDestino" select="$archivoOperaciones/operaciones/operacion[@nombre-interno=$nombreOperacionOrigen]/@nombre-esb"/>

		<xsl:variable name="operacion">
			<xsl:choose>
				<xsl:when test="$operacionDestino">
					<xsl:value-of select="concat($operacionDestino,'MsjResp')"/>
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="$operacionOrigen"/>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>

		<!-- rpena.20180209.Validacion de respuesta de servicio AutenticarUsuario y rutina de calculo de token si es requerido -->
		<xsl:variable name="codigoRespuesta" select="*/*[local-name()='CabeceraResp']/dcomcom:EstadoGeneral/dcomcom:Codigo"/>
		<xsl:if test="($nombreOperacionOrigen = 'AutenticarUsuario') and ($codigoRespuesta = 'U0000')">
			<!-- Se extraen las variables del perfil guardado en el contexto saved -->
			<xsl:variable name="profile" select="dp:variable('var://context/saved/perfil')"/>
			<xsl:for-each select="$profile">
				<xsl:variable name="login"><xsl:value-of select="dautaut:Login"/></xsl:variable>
				<xsl:variable name="numeroCliente"><xsl:value-of select="dautaut:NumeroCliente"/></xsl:variable>
				<xsl:variable name="numeroBancaVirtual"><xsl:value-of select="dautaut:NumeroBancaVirtual"/></xsl:variable>
				<dp:set-variable name="'var://context/saved/perfilData'" value="concat($login, $numeroCliente, $numeroBancaVirtual)"/>
			</xsl:for-each>
			<!-- Se extrae el valor de sesionBG para que forme parte del token generado -->
			<xsl:variable name="sesionbg" select="/*[local-name()='AutenticarUsuarioMsjResp']/*[local-name()='SesionBG']"/>
			<xsl:variable name="dateTime"><xsl:value-of select="date:date-time()"/></xsl:variable>
			<xsl:variable name="vPerfilData" select="dp:variable('var://context/saved/perfilData')"/>
			<xsl:variable name="vFecha"><xsl:value-of select="substring-before($dateTime, 'T')"/></xsl:variable>
			<xsl:variable name="vTimestamp"><xsl:value-of select="dp:time-value()"/></xsl:variable>
			<xsl:variable name="secretKey" select="dp:base64-cert(concat('name:', 'datapower.sign.cer'))"/>
			<!-- Se concatenan los componentes del hash -->
			<xsl:variable name="credenciales">
				<xsl:value-of select="concat($vPerfilData, $sesionbg, $vFecha, $vTimestamp)"/>
			</xsl:variable>
			<!-- Se usa hmac para cifrar la clave junto al secretKey y el timestamp -->
			<xsl:variable name="token">
				<xsl:value-of select="dp:hmac($SHA256, $secretKey, $credenciales)"/>
			</xsl:variable>
			<!-- Se guardan las variables para poder colocarlas en la mensajeria de salida porsteriormente -->
			<dp:set-variable name="'var://context/saved/userToken'" value="$token"/>
			<dp:set-variable name="'var://context/saved/userTimestamp'" value="$vTimestamp"/>
		</xsl:if>
		<!-- rpena.20180209.Validacion de respuesta de servicio AutenticarUsuario y rutina de calculo de token si es requerido -->

		<!--Iniciar transformacion -->
		<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
			xmlns:out="urn:esbbancogeneral.com/gbo/xml/schemas/v1_0/"
			xmlns:dcomcom="http://xmlns.bgeneral.com/ObjetoEmpresarial/DominioComun/Comun/V1">
			<soapenv:Header/>
			<soapenv:Body>
				<!--Copiar namespaces en la cabecera -->
				<xsl:element name="out:{$operacion}">
					<xsl:for-each select="/*/namespace::*">
						<xsl:copy-of select="."/>
					</xsl:for-each>
					<!--Transformar BODY -->
					<!--CODIGO AGREGADO POR LINNEKER -->
					<xsl:if test="/*/*[local-name()!='CabeceraResp']">
                        <out:BODY>
                            <xsl:for-each  select="/*/*[local-name()!='CabeceraResp']">
                                <xsl:variable name="nombreAtributoInterno" select="local-name()"/>
                                <xsl:variable name="nombreAtributoESB" select="$archivoOperaciones/operaciones/operacion[@nombre-interno=$nombreOperacionOrigen]/atributos[@tipo='response']/atributo[@nombre-interno=$nombreAtributoInterno]/@nombre-esb"/>
                                <xsl:variable name="nombreAtributoRespuesta">
                                    <xsl:choose>
                                        <xsl:when test="$nombreAtributoESB">
                                            <xsl:value-of select="$nombreAtributoESB"/> 
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:value-of select="$nombreAtributoInterno"/> 
                                        </xsl:otherwise>
                                    </xsl:choose>                
                                </xsl:variable>

                                <xsl:choose>
                                    <xsl:when test="$nombreAtributoRespuesta != 'NULO'">
                                        <xsl:element name="out:{$nombreAtributoRespuesta}">
                                            <xsl:choose>
                                                <xsl:when test="./*">
                                                    <xsl:for-each  select="./*">
                                                        <xsl:variable name="namespace" select="namespace-uri()"/>

                                                        <xsl:choose>
                                                            <xsl:when test="$namespace = $namespaceInterno">
                                                                <xsl:choose>
                                                                    <xsl:when test="./*">
                                                                        <xsl:element name="{concat('out:', local-name())}">
                                                                            <xsl:copy-of select="./*"/>
                                                                        </xsl:element>    
                                                                    </xsl:when>
                                                                    <xsl:otherwise>
                                                                        <xsl:element name="{concat('out:', local-name())}">
                                                                            <xsl:value-of select="."/> 
                                                                        </xsl:element>    
                                                                    </xsl:otherwise>
                                                                </xsl:choose>  
                                                                <xsl:message>
                                                                    <xsl:value-of select="concat('DEBUG - localname')"/> 
                                                                </xsl:message>
                                                            </xsl:when>
                                                            <xsl:otherwise>
                                                                <xsl:message>
                                                                    <xsl:value-of select="concat('DEBUG - name')"/> 
                                                                </xsl:message>
                                                                <xsl:choose>
                                                                    <xsl:when test="./*">
                                                                        <xsl:element name="{local-name()}" namespace="{namespace-uri()}">
                                                                            <xsl:copy-of select="./*"/>
                                                                        </xsl:element>    
                                                                    </xsl:when>
                                                                    <xsl:otherwise>
                                                                        <xsl:element name="{local-name()}" namespace="{namespace-uri()}">
                                                                            <xsl:value-of select="."/> 
                                                                        </xsl:element>    
                                                                    </xsl:otherwise>
                                                                </xsl:choose>  
                                                            </xsl:otherwise>
                                                        </xsl:choose>                

                                                        <xsl:message>
                                                            <xsl:value-of select="concat('NombreInterno',$nombreAtributo)"/> 
                                                        </xsl:message>
                                                    </xsl:for-each> 
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <xsl:value-of select="."/> 
                                                </xsl:otherwise>
                                            </xsl:choose>
                                        </xsl:element>
                                    </xsl:when>   
                                </xsl:choose>                                         

                            </xsl:for-each> 
                        </out:BODY>
                    </xsl:if>
					<!--FIN CODIGO AGREGADO POR LINNEKER -->
					<!--Recuperar header -->
					<xsl:variable name="savedHEADER" select="dp:variable('var://context/saved/header')"/>
					<out:HEADER>
						<xsl:for-each select="$savedHEADER">
							<out:numeroUnico>
								<xsl:value-of select="out:numeroUnico"/>
							</out:numeroUnico>
							<out:oficina>
								<xsl:value-of select="out:oficina"/>
							</out:oficina>
							<out:terminal>
								<xsl:value-of select="out:terminal"/>
							</out:terminal>
							<out:usuario>
								<xsl:value-of select="out:usuario"/>
							</out:usuario>
							<out:rolUsuario>
								<xsl:value-of select="out:rolUsuario"/>
							</out:rolUsuario>
							<out:aplicacion>
								<xsl:value-of select="out:aplicacion"/>
							</out:aplicacion>
							<out:canal>
								<xsl:value-of select="out:canal"/>
							</out:canal>
							<out:fecha>
								<xsl:value-of select="out:fecha"/>
							</out:fecha>
							<out:nodo>
								<xsl:value-of select="out:nodo"/>
							</out:nodo>
							<out:sesionBG>
								<xsl:value-of select="out:sesionBG"/>
							</out:sesionBG>
							<out:direccionIp>
								<xsl:value-of select="out:direccionIp"/>
							</out:direccionIp>
							<out:origenSolicitud>
								<xsl:value-of select="out:origenSolicitud"/>
							</out:origenSolicitud>
							<out:numeroReferencia>
								<xsl:value-of select="dp:variable('var://context/saved/userToken')"/>
							</out:numeroReferencia>
							<out:horaInicio>
								<xsl:value-of select="dp:variable('var://context/saved/userTimestamp')"/>
							</out:horaInicio>
						</xsl:for-each>
					</out:HEADER>
					<!--Transformar CabeceraResp a STATUS -->
					<out:STATUS>
						<xsl:choose>
							<xsl:when
								test="*/*[local-name()='CabeceraResp']/dcomcom:EstadoGeneral/dcomcom:Codigo = 'U0000'">
								<out:returnStatus>
									<out:returnCode>
										<xsl:value-of select="*/*[local-name()='CabeceraResp']/dcomcom:EstadoGeneral/dcomcom:Codigo" />
									</out:returnCode>
									<out:returnCodeDesc>
										<xsl:value-of select="*/*[local-name()='CabeceraResp']/dcomcom:EstadoGeneral/dcomcom:Descripcion" />
									</out:returnCodeDesc>
								</out:returnStatus>
							</xsl:when>
							<xsl:when
								test="*/*[local-name()='CabeceraResp']/dcomcom:EstadoGeneral/dcomcom:Codigo = 'U0002' and */*[local-name()='CabeceraResp']/dcomcom:EstadosPorRegistro/dcomcom:Estado[1]/dcomcom:EstadosDetalle/dcomcom:EstadoDetalle[2]/* ">
								<out:returnStatus>
									<out:returnCode>
										<xsl:value-of select="*/*[local-name()='CabeceraResp']/dcomcom:EstadosPorRegistro/dcomcom:Estado[1]/dcomcom:EstadosDetalle/dcomcom:EstadoDetalle[1]/dcomcom:Descripcion" />
									</out:returnCode>
									<out:returnCodeDesc>
										<xsl:value-of select="*/*[local-name()='CabeceraResp']/dcomcom:EstadosPorRegistro/dcomcom:Estado[1]/dcomcom:EstadosDetalle/dcomcom:EstadoDetalle[2]/dcomcom:Descripcion" />
									</out:returnCodeDesc>
								</out:returnStatus>
							</xsl:when>
							<xsl:otherwise>
								<out:returnStatus>
									<out:returnCode>
										<xsl:value-of select="*/*[local-name()='CabeceraResp']/dcomcom:EstadosPorRegistro/dcomcom:Estado[1]/dcomcom:Codigo" />
									</out:returnCode>
									<out:returnCodeDesc>
										<xsl:value-of select="*/*[local-name()='CabeceraResp']/dcomcom:EstadosPorRegistro/dcomcom:Estado[1]/dcomcom:Descripcion" />
									</out:returnCodeDesc>
								</out:returnStatus>
							</xsl:otherwise>
						</xsl:choose>
					</out:STATUS>
				</xsl:element>
			</soapenv:Body>
		</soapenv:Envelope>
	</xsl:template>
</xsl:stylesheet>
